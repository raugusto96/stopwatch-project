{"version":3,"sources":["functions/time.js","components/StopWatch.jsx","App.js","index.js"],"names":["convertTimeToMinutesAndSeconds","time","minutes","String","Math","floor","padStart","seconds","convertCustomTimeToSeconds","temporaryTime","split","forEach","unit","includes","temporaryMinutes","replace","minutesInSeconds","temporarySeconds","StopWatch","handleInputTime","target","isValid","value","match","setState","startCountdownDisabled","setMinutesAndSeconds","state","timeFunctions","customInterval","event","preventDefault","showTimer","startCountdown","countdownTimeout","setTimeout","initialState","countdownEnd","cancelCountdown","clearTimeout","countdownCanceled","goBack","setFastTimer","setCoffeeTimer","setGeoGuessrTimer","setRandomTimer","timeInMinutes","random","timeInSeconds","_prevProps","prevState","this","Audio","play","minutesLeft","minutesRight","secondsLeft","secondsRight","className","onClick","onSubmit","type","onChange","placeholder","disabled","spellCheck","React","Component","App","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAMaA,G,MAAiC,SAACC,GAI7C,MAAO,CACLC,QAJcC,OAAOC,KAAKC,MAAMJ,EAAO,KAAKK,SAAS,EAAG,KAKxDC,QAJcJ,OAAOF,EAAO,IAAIK,SAAS,EAAG,QAQnCE,EAA6B,SAACC,GACzCA,EAAgBA,EAAcC,MAAM,MAEpC,IAAIH,EAAU,EAcd,OAZAE,EAAcE,SAAQ,SAACC,GACrB,GAAIA,EAAKC,SAAS,KAAM,CACtB,IAAMC,EAAmBF,EAAKG,QAAQ,IAAK,IACrCC,EAAmBZ,KAAKC,MAAyB,GAAnBS,GACpCP,GAAWS,MACN,CACL,IAAIC,EAAmBL,EAAKG,QAAQ,IAAK,IAEzCR,GADAU,GAAsC,OAKnCV,G,qBClBYW,E,kDACnB,aAAe,IAAD,8BACZ,gBAiCFC,gBAAkB,YAAiB,IAAdC,EAAa,EAAbA,OACbC,EAA0CD,EAAOE,MDhDnCC,MAFF,wECmDlB,EAAKC,SAAS,CACZC,wBAAyBJ,EACzBZ,cAAeW,EAAOE,SAtCZ,EA0CdI,qBAAuB,WACrB,IAAQzB,EAAS,EAAK0B,MAAd1B,KAER,EAD2C2B,EACiB3B,GAApDC,EAAR,EAAQA,QAASK,EAAjB,EAAiBA,QAEjB,EAAKiB,SAAS,CAAEtB,UAASK,aA/Cb,EAkDdsB,eAAiB,SAACC,GAChBA,EAAMC,iBACN,IAGM9B,EAHiC2B,EACf,EAAKD,MAAvBlB,eAIN,EAAKe,SAAS,CACZvB,OACAQ,cAAe,GACfgB,wBAAwB,EACxBO,WAAW,KA7DD,EAiEdC,eAAiB,WACf,IAAQhC,EAAS,EAAK0B,MAAd1B,KACR,EAAKiC,iBAAmBC,YAAW,WACjC,EAAKX,SAAL,2BACK,EAAKY,cADV,IAEEnC,KAAMA,EAAM,EACZ+B,WAAW,EACXK,cAAc,OAEf,MA1ES,EA6EdC,gBAAkB,WAChBC,aAAa,EAAKL,kBAClB,EAAKV,SAAS,CAAEvB,KAAM,EAAG+B,WAAW,EAAOQ,mBAAmB,KA/ElD,EAkFdC,OAAS,WACP,EAAKjB,SAAS,CAAEQ,WAAW,EAAOK,cAAc,KAnFpC,EAsFdK,aAAe,WACb,EAAKlB,SAAS,CACZf,cAAe,QAxFL,EA4FdkC,eAAiB,WACf,EAAKnB,SAAS,CACZf,cAAe,QA9FL,EAkGdmC,kBAAoB,WAClB,EAAKpB,SAAS,CACZf,cAAe,SApGL,EAwGdoC,eAAiB,WACf,IAEMC,EAAgB1C,KAAKC,MAAM,GAAAD,KAAK2C,SAF1B,GAGNC,EAAgB5C,KAAKC,MAAM,GAAAD,KAAK2C,SAH1B,GAIU,KAAlBD,EACF,EAAKtB,SAAS,CACZf,cAAc,GAAD,OAAKqC,EAAL,OAGf,EAAKtB,SAAS,CACZf,cAAc,GAAD,OAAKqC,EAAL,aAAuBE,EAAvB,QAhHjB,EAAKZ,aAAe,CAClBnC,KAAM,EACNQ,cAAe,GACfP,QAAS,EACTK,QAAS,EACTkB,wBAAwB,EACxBO,WAAW,EACXK,cAAc,EACdG,mBAAmB,GAGrB,EAAKb,MAAQ,EAAKS,aAElB,EAAKF,iBAAmB,KAhBZ,E,sDAmBd,SAAmBe,EAAYC,GACzBA,EAAUjD,OAASkD,KAAKxB,MAAM1B,OAChCkD,KAAKzB,uBACDyB,KAAKxB,MAAM1B,KAAO,EAAGkD,KAAKlB,iBACpBkB,KAAKxB,MAAMa,oBACnBW,KAAK3B,SAAS,CAAEQ,WAAW,EAAOK,cAAc,IAChD,IAAIe,MAAM,oBAAoBC,W,kCAKpC,WACEd,aAAaY,KAAKjB,oB,oBAyFpB,WACE,MAAgHiB,KAAKxB,MAA7GF,EAAR,EAAQA,uBAAwBvB,EAAhC,EAAgCA,QAASK,EAAzC,EAAyCA,QAASyB,EAAlD,EAAkDA,UAAWvB,EAA7D,EAA6DA,cAAe+B,EAA5E,EAA4EA,kBAAmBH,EAA/F,EAA+FA,aAC/F,EAAoClC,OAAOD,GAASI,SAAS,EAAG,KAAhE,mBAAOgD,EAAP,KAAoBC,EAApB,KACA,EAAoCpD,OAAOI,GAASD,SAAS,EAAG,KAAhE,mBAAOkD,EAAP,KAAoBC,EAApB,KACA,OACE,sBAAKC,UAAU,sBAAf,UACE,wBAAQA,UAAU,mBAAlB,SACE,sBAAMA,UAAU,aAAhB,gCAEF,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,UAAf,SACG1B,GACC,qCACE,sBAAM0B,UAAU,aAAhB,SAA8BJ,IAC9B,sBAAMI,UAAU,cAAhB,SAA+BH,SAIpCvB,GAAa,qCACbA,GAEC,mCACE,sBAAK0B,UAAU,UAAf,UACE,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,YAKrCzB,EAEE,yBAAQ2B,QAAUR,KAAKb,gBAAkBoB,UAAU,eAAnD,UACE,cAAC,IAAD,IADF,cAMA,mCACE,uBAAMA,UAAU,iBAAiBE,SAAWT,KAAKtB,eAAjD,UACE,sBAAK6B,UAAU,iBAAf,UACE,uBACEG,KAAK,OACLC,SAAWX,KAAKhC,gBAChB4C,YAAY,cACZzC,MAAQb,IAEV,yBACEuD,SAAWvC,EACXwC,YAAY,EAFd,UAIGxC,EAAyB,cAAC,IAAD,IAAiB,cAAC,IAAD,IAJ7C,sBAQF,sBAAKiC,UAAU,UAAf,UACE,yBACEC,QAAUR,KAAKT,aADjB,UAGE,cAAC,IAAD,IAHF,qBAMA,yBACEiB,QAAUR,KAAKR,eADjB,UAGE,cAAC,IAAD,IAHF,2BAMA,yBACEgB,QAAUR,KAAKP,kBADjB,UAGE,cAAC,IAAD,IAHF,eAMA,yBACEe,QAAUR,KAAKN,eADjB,UAGE,cAAC,IAAD,IAHF,0BAWPR,IAAiBG,GAClB,sBAAKkB,UAAU,sBAAf,UACE,mCAAQ,qBAAKA,UAAU,OAAf,0BAAR,uBACA,wBAAQC,QAAUR,KAAKV,OAAvB,8B,GAhN2ByB,IAAMC,WCF9BC,E,4JATb,WACE,OACE,qBAAKC,GAAG,MAAR,SACE,cAAC,EAAD,U,GAJUH,IAAMC,WCCxBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ade7f059.chunk.js","sourcesContent":["export const validadeInputTime = (timeToValidade) => {\n  const timePattern = /^([1-5][0-9]|[1-9])m\\s([1-5][0-9]|[1-9])s$|^([1-5][0-9]|[1-9])(m|s)$/;\n\n  return timeToValidade.match(timePattern);\n};\n\nexport const convertTimeToMinutesAndSeconds = (time) => {\n  const minutes = String(Math.floor(time / 60)).padStart(2, '0');\n  const seconds = String(time % 60).padStart(2, '0');\n\n  return {\n    minutes,\n    seconds,\n  };\n};\n\nexport const convertCustomTimeToSeconds = (temporaryTime) => {\n  temporaryTime = temporaryTime.split(/\\s/);\n\n  let seconds = 0;\n\n  temporaryTime.forEach((unit) => {\n    if (unit.includes('m')) {\n      const temporaryMinutes = unit.replace('m', '');\n      const minutesInSeconds = Math.floor(temporaryMinutes * 60);\n      seconds += minutesInSeconds;\n    } else {\n      let temporarySeconds = unit.replace('s', '');\n      temporarySeconds = temporarySeconds % 60;\n      seconds += temporarySeconds;\n    }\n  })\n\n  return seconds;\n};\n","import React from 'react';\nimport '../css/stopwatch.css'\nimport * as timeFunctions from '../functions/time';\n\nimport {\n  MdAlarmOff,\n  MdAlarmOn,\n  MdLocalCafe,\n  MdLocationOn,\n} from 'react-icons/md';\nimport {\n  BiTimer,\n  BiShuffle,\n} from 'react-icons/bi';\n\nexport default class StopWatch extends React.Component {\n  constructor() {\n    super();\n\n    this.initialState = {\n      time: 0,\n      temporaryTime: '',\n      minutes: 0,\n      seconds: 0,\n      startCountdownDisabled: true,\n      showTimer: false,\n      countdownEnd: false,\n      countdownCanceled: false,\n    }\n\n    this.state = this.initialState;\n\n    this.countdownTimeout = null;\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.time !== this.state.time) {\n      this.setMinutesAndSeconds();\n      if (this.state.time > 0) this.startCountdown();\n      else if (!this.state.countdownCanceled) {\n        this.setState({ showTimer: false, countdownEnd: true });\n        new Audio('notification.wav').play();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.countdownTimeout);\n  }\n\n  handleInputTime = ({ target }) => {\n    const isValid = timeFunctions.validadeInputTime(target.value);\n    this.setState({\n      startCountdownDisabled: !isValid,\n      temporaryTime: target.value,\n    });\n  }\n\n  setMinutesAndSeconds = () => {\n    const { time } = this.state;\n    const { convertTimeToMinutesAndSeconds } = timeFunctions;\n    const { minutes, seconds } = convertTimeToMinutesAndSeconds(time);\n\n    this.setState({ minutes, seconds });\n  }\n\n  customInterval = (event) => {\n    event.preventDefault();\n    const { convertCustomTimeToSeconds } = timeFunctions;\n    let { temporaryTime } = this.state;\n\n    const time = convertCustomTimeToSeconds(temporaryTime);\n\n    this.setState({\n      time,\n      temporaryTime: '',\n      startCountdownDisabled: true,\n      showTimer: true,\n    });\n  }\n\n  startCountdown = () => {\n    const { time } = this.state;\n    this.countdownTimeout = setTimeout(() => {\n      this.setState({\n        ...this.initialState,\n        time: time -1,\n        showTimer: true,\n        countdownEnd: false,\n      })\n    }, 1000);\n  }\n\n  cancelCountdown = () => {\n    clearTimeout(this.countdownTimeout);\n    this.setState({ time: 0, showTimer: false, countdownCanceled: true });\n  }\n\n  goBack = () => {\n    this.setState({ showTimer: false, countdownEnd: false });\n  }\n\n  setFastTimer = () => {\n    this.setState({\n      temporaryTime: '3m',\n    })\n  }\n\n  setCoffeeTimer = () => {\n    this.setState({\n      temporaryTime: '5m',\n    })\n  }\n\n  setGeoGuessrTimer = () => {\n    this.setState({\n      temporaryTime: '10m',\n    })\n  }\n\n  setRandomTimer = () => {\n    const min = 1;\n    const max = 60;\n    const timeInMinutes = Math.floor(Math.random() * (max - min + 1) + min);\n    const timeInSeconds = Math.floor(Math.random() * (max - min + 1) + min);\n    if (timeInMinutes === 60) {\n      this.setState({\n        temporaryTime: `${timeInMinutes}m`  \n      })\n    } else {\n      this.setState({\n        temporaryTime: `${timeInMinutes}m ${timeInSeconds}s`,\n      })\n    }\n  }\n\n  render() {\n    const { startCountdownDisabled, minutes, seconds, showTimer, temporaryTime, countdownCanceled, countdownEnd } = this.state;\n    const [minutesLeft, minutesRight] = String(minutes).padStart(2, '0');\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0');\n    return(\n      <div className=\"stopwatch-container\">\n        <header className=\"stopwatch-header\">\n          <span className=\"fixed-text\">Work in Progress</span>\n        </header>\n        <div className=\"stopwatch-timer\">\n          <div className=\"minutes\">\n            {showTimer &&\n              <>\n                <span className=\"minuteLeft\">{minutesLeft}</span>\n                <span className=\"minuteRight\">{minutesRight}</span>\n              </>\n            }\n          </div>\n          {showTimer && <span>:</span>}\n          {showTimer \n            &&\n            <>\n              <div className=\"seconds\">\n                <span className=\"secondLeft\">{secondsLeft}</span>\n                <span className=\"secondRight\">{secondsRight}</span>\n              </div>\n            </>\n          }\n        </div>\n        { showTimer ? \n          (\n            <button onClick={ this.cancelCountdown } className=\"cancelButton\">\n              <MdAlarmOff />\n              Cancelar\n            </button>\n          ) : \n          (\n            <>\n              <form className=\"form-container\" onSubmit={ this.customInterval }>\n                <div className=\"customInterval\">\n                  <input\n                    type=\"text\"\n                    onChange={ this.handleInputTime }\n                    placeholder=\"Ex.: 3m 25s\"\n                    value={ temporaryTime }\n                    />\n                  <button\n                    disabled={ startCountdownDisabled }\n                    spellCheck={false}\n                    >\n                    {startCountdownDisabled ? <MdAlarmOff /> : <MdAlarmOn />}\n                    Iniciar timer\n                  </button>\n                </div>\n                <div className=\"options\">\n                  <button\n                    onClick={ this.setFastTimer }\n                  >\n                    <BiTimer />\n                    Vamos rápido\n                  </button>\n                  <button\n                    onClick={ this.setCoffeeTimer }\n                    >\n                    <MdLocalCafe />\n                    Tempo para um café\n                  </button>\n                  <button\n                    onClick={ this.setGeoGuessrTimer }\n                    >\n                    <MdLocationOn />\n                    GeoGuessr\n                  </button>\n                  <button\n                    onClick={ this.setRandomTimer }\n                    >\n                    <BiShuffle />\n                    Aleatório\n                  </button>\n                </div>\n              </form>\n            </>\n          )\n        }\n        { (countdownEnd && !countdownCanceled) && (\n          <div className=\"countdownEndMessage\">\n            <strong><div className=\"tada\">🥳</div>Tempo Finalizado!</strong>\n            <button onClick={ this.goBack }>Voltar</button>\n          </div>\n        )}\n    </div>\n    )\n  }\n}\n","import React from 'react';\nimport './css/theme.css'\nimport StopWatch from './components/StopWatch';\nclass App extends React.Component {\n  render () {\n    return (\n      <div id=\"App\">\n        <StopWatch />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}